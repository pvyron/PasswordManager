@attribute [Route(ApplicationRoutes.AddPassword)]

<PageTitle>Passwords</PageTitle>

@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations
@using PasswordManager.Portal.ViewModels.AddPassword;

<div style="margin:5%">
    <MudGrid Justify="Justify.FlexStart">
        <MudItem xl="8" lg="8" md="8" sm="10" xs="12">
            <MudForm Model="@_addPasswordForm" @bind-IsValid="@_addPasswordForm.IsValid" >
                <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">
                    <MudGrid Spacing="5" Justify="Justify.SpaceBetween" Style="margin-left:3%; margin-right:3%" >
                        <MudItem lg="6" md="12" sm="12" xs="12">
                            <MudGrid Justify="Justify.Center" Spacing="7">
                                <MudItem xs="12">
                                    <MudTextField @bind-Value="@_addPasswordForm.Title"
                                                  Variant="Variant.Text"
                                                  Label="Password Title"
                                                  For="@(() => _addPasswordForm.Title)" />
                                </MudItem>
                                <MudItem xs="12">
                                    <MudTextField @bind-Value="@_addPasswordForm.Username"
                                                  Variant="Variant.Text"
                                                  Label="Username"
                                                  For="@(() => _addPasswordForm.Username)" />
                                </MudItem>
                                <MudItem xs="12">
                                    <MudTextField @bind-Value="@_addPasswordForm.Password"
                                                Variant="Variant.Text"
                                                Label="Password"
                                                InputType="_addPasswordForm.ShowPassword ? InputType.Text : InputType.Password"
                                                Adornment="Adornment.End"
                                                AdornmentIcon="@(_addPasswordForm.ShowPassword ? Icons.Material.Filled.Visibility : Icons.Material.Filled.VisibilityOff)"
                                                OnAdornmentClick="@(() => _addPasswordForm.ShowPassword = !_addPasswordForm.ShowPassword)"
                                                AdornmentAriaLabel="Show password"
                                                For="@(() => _addPasswordForm.Password)" />
                                </MudItem> 
                                <MudItem xs="12">
                                    <MudRadioGroup T="AvailableCategory" SelectedOption="@_addPasswordForm.Category" SelectedOptionChanged="PickedCategoryChanged" Required="true" RequiredError="Must choose a category!">
                                        @foreach (var availableCategory in AvailableCategories)
                                        {
                                            <MudRadio T="AvailableCategory" Option="@availableCategory">@availableCategory.Name</MudRadio>
                                        }
                                    </MudRadioGroup>
                                </MudItem>
                            </MudGrid>
                        </MudItem>
                        <MudItem lg="6" md="12" sm="12" xs="12">
                            <MudGrid Justify="Justify.FlexEnd" Spacing="7">
                                <MudItem xs="12">
                                    <MudTextField @bind-Value="@_addPasswordForm.Description"
                                        Variant="Variant.Outlined"
                                        Label="Password Description"
                                        Lines="10" />
                                </MudItem>
                            </MudGrid>
                        </MudItem>
                        <MudItem xs="12">
                            <MudPaper Class="d-flex justify-end flex-grow-1 gap-4" Elevation="0">
                                <MudButton Variant="Variant.Filled"
                                           Color="Color.Primary"
                                           Size="Size.Large"
                                           Disabled="@_addingPasswordInProgress"
                                           OnClick="AddNewPassword">
                                    @if (_addingPasswordInProgress)
                                    {
                                        <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                                        <MudText Class="ms-2" Typo="Typo.button">Adding</MudText>
                                    }
                                    else
                                    {
                                        <MudText Typo="Typo.button">Add Password</MudText>
                                    }
                                </MudButton>
                            </MudPaper>
                        </MudItem>
                    </MudGrid>
                </MudPaper>
            </MudForm>
        </MudItem>
    </MudGrid>
</div>



@*


<MudGrid>
    <MudItem xs="12" sm="7">
        <MudPaper Class="pa-4">
            <MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">
                <MudTextField T="string" Label="Username" Required="true" RequiredError="User name is required!" />
                <MudTextField T="string" Label="Password" HelperText="Choose a strong password" @ref="pwField1"
                              InputType="InputType.Password"
                              Validation="@(new Func<string, IEnumerable<string>>(PasswordStrength))" Required="true"
                              RequiredError="Password is required!" />
                <div class="d-flex">
                    <MudRadioGroup T="string" Required="true" RequiredError="Account type is required!">
                        @foreach (var category in Categories)
                        {
                            <MudRadio T="string">@category.Name</MudRadio>
                        }
                    </MudRadioGroup>
                </div>
                <div class="d-flex align-center justify-space-between">
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="@(!success)" Class="ml-auto">Cancel</MudButton>
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="@(!success)" Class="ml-auto">Save</MudButton>
                </div>
            </MudForm>
        </MudPaper>
        <MudPaper Class="pa-4 mt-4">
            <MudButton Variant="Variant.Filled" Color="Color.Primary" DisableElevation="true" OnClick="@(()=>form.Validate())">Validate</MudButton>
            <MudButton Variant="Variant.Filled" Color="Color.Secondary" DisableElevation="true" OnClick="@(()=>form.Reset())" Class="mx-2">Reset</MudButton>
            <MudButton Variant="Variant.Filled" DisableElevation="true" OnClick="@(()=>form.ResetValidation())">Reset Validation</MudButton>
        </MudPaper>
    </MudItem>
    <MudItem xs="12" sm="5">
        <MudPaper Class="pa-4 mud-height-full">
            <MudText Typo="Typo.subtitle2">@($"Errors ({errors.Length})")</MudText>
                @foreach (var error in errors)
            {
                <MudText Color="@Color.Error">@error</MudText>
            }
        </MudPaper>
    </MudItem>
</MudGrid>
*@